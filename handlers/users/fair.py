"""
–Ø—Ä–º–∞—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ —Ä–µ—Å—É—Ä—Å–æ–≤.
"""
from aiogram import types
from aiogram.utils.markdown import hbold

from loader import dp, db

from keyboards.inline.profile_buttons import profile_callback
from keyboards.inline.fair_buttons import fair_callback, fair_keyboard

from models.get_user_info import get_item, get_resource

from level import give_points

# —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –º–æ–Ω–µ—Ç–∞—Ö
one_wool_cost = 2
one_egg_cost = 4
one_milk_cost = 7

@dp.callback_query_handler(profile_callback.filter(btn="fair"))
async def fair(message: types.Message) -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è—Ä–º–∞—Ä–∫–∏."""
    global wool_for_sale
    global eggs_for_sale
    global milk_for_sale

    userid = message.from_user.id
    user_wool = get_item(userid, "wool")
    user_eggs = get_item(userid, "egg")
    user_milk = get_item(userid, "milk")

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ
    # –∫–æ–ª-–≤–æ —Ä–µ—Å—É—Ä—Å–∞ —É –∏–≥—Ä–æ–∫–∞ * —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞
    wool_for_sale = user_wool * one_wool_cost
    eggs_for_sale = user_eggs * one_egg_cost
    milk_for_sale = user_milk * one_milk_cost

    msg = f"""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —è—Ä–º–∞—Ä–∫—É! –ó–¥–µ—Å—å, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ —ç—Ç–æ –¥–µ–Ω—å–≥–∏.

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å...
–®–µ—Ä—Å—Ç—å –∑–∞ {hbold(wool_for_sale)} –º–æ–Ω–µ—Ç üí∞
–Ø–π—Ü–∞ –∑–∞ {hbold(eggs_for_sale)} –º–æ–Ω–µ—Ç üí∞
–ú–æ–ª–æ–∫–æ –∑–∞ {hbold(milk_for_sale)} –º–æ–Ω–µ—Ç üí∞
"""

    await dp.bot.send_message(message.from_user.id, msg, reply_markup=fair_keyboard)


# –ü–†–û–î–ê–¢–¨ –®–ï–†–°–¢–¨
@dp.callback_query_handler(fair_callback.filter(product="wool"))
async def wool_sale(call: types.CallbackQuery) -> None:
    wool = get_item(call.from_user.id, "wool")
    if wool >= 1:
        db.execute(f"UPDATE user_items SET wool = 0 WHERE user_id=?", params=(call.from_user.id, ), commit=True) # –£–±–∏—Ä–∞–µ–º –≤—Å—é —à–µ—Ä—Å—Ç—å
        db.execute(f"UPDATE users SET coins = coins + {wool_for_sale} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
        db.execute(f"UPDATE users SET barn_accumulation =  barn_accumulation + {wool} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –≤ –∞–º–±–∞—Ä
        give_points(call.from_user.id, 15)
        await call.answer("‚úÖ –®–µ—Ä—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–Ω–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ 15 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞")
    else:
        await call.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç —à–µ—Ä—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏")


# –ü–†–û–î–ê–¢–¨ –Ø–ô–¶–ê
@dp.callback_query_handler(fair_callback.filter(product="eggs"))
async def wool_sale(call: types.CallbackQuery) -> None:
    eggs = get_item(call.from_user.id, "egg")
    if eggs >= 1:
        db.execute(f"UPDATE user_items SET egg = 0 WHERE user_id=?", params=(call.from_user.id, ), commit=True) # –£–±–∏—Ä–∞–µ–º –≤—Å–µ —è–π—Ü–∞
        db.execute(f"UPDATE users SET coins = coins + {eggs_for_sale} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
        db.execute(f"UPDATE users SET barn_accumulation =  barn_accumulation + {eggs} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –≤ –∞–º–±–∞—Ä
        give_points(call.from_user.id, 30)
        await call.answer("‚úÖ –Ø–π—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–Ω—ã! –í—ã –ø–æ–ª—É—á–∏–ª–∏ 30 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞")
    else:
        await call.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç —è–∏—Ü –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏")


# –ü–†–û–î–ê–¢–¨ –ú–û–õ–û–ö–û
@dp.callback_query_handler(fair_callback.filter(product="milk"))
async def wool_sale(call: types.CallbackQuery) -> None:
    milk = get_item(call.from_user.id, "milk")
    if milk >= 1:
        db.execute(f"UPDATE user_items SET milk = 0 WHERE user_id=?", params=(call.from_user.id, ), commit=True) # –£–±–∏—Ä–∞–µ–º –≤—Å—ë –º–æ–ª–æ–∫–æ
        db.execute(f"UPDATE users SET coins = coins + {milk_for_sale} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
        db.execute(f"UPDATE users SET barn_accumulation =  barn_accumulation + {milk} WHERE id=?", params=(call.from_user.id, ), commit=True) # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –≤ –∞–º–±–∞—Ä
        give_points(call.from_user.id, 50)
        await call.answer("‚úÖ –ú–æ–ª–æ–∫–æ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–Ω–æ! –í—ã –ø–æ–ª—É—á–∏–ª–∏ 50 –æ—á–∫–æ–≤ –æ–ø—ã—Ç–∞")
    else:
        await call.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –º–æ–ª–æ–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏")